{"ast":null,"code":"var _jsxFileName = \"/Users/aryamankukal/Downloads/Take_Home/frontend/src/components/BadgeDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BadgeDisplay() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [badge, setBadge] = useState(null);\n  const [loading, setLoading] = useState(true); // Add a loading state\n\n  useEffect(() => {\n    const fetchBadge = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/badges/${id}`);\n        console.log('Fetched badge:', response.data); // Debugging line\n        setBadge(response.data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching badge:', error);\n        setLoading(false);\n      }\n    };\n    fetchBadge();\n  }, [id]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 23\n  }, this);\n  if (!badge) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No badge found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 22\n  }, this); // Check if badge is null or undefined\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"badge-display\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: badge.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"University: \", badge.university]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Major: \", badge.major]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Graduation Date: \", badge.graduation_date]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"GitHub: \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: badge.github,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: badge.github\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `http://localhost:5000/${badge.qr_code_url}`,\n      alt: \"QR Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(BadgeDisplay, \"Kgpfu06/5RT9yOKMShuhdbYubAQ=\", false, function () {\n  return [useParams];\n});\n_c = BadgeDisplay;\nexport default BadgeDisplay;\nvar _c;\n$RefreshReg$(_c, \"BadgeDisplay\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","jsxDEV","_jsxDEV","BadgeDisplay","_s","id","badge","setBadge","loading","setLoading","fetchBadge","response","get","console","log","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","university","major","graduation_date","href","github","target","rel","src","qr_code_url","alt","_c","$RefreshReg$"],"sources":["/Users/aryamankukal/Downloads/Take_Home/frontend/src/components/BadgeDisplay.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction BadgeDisplay() {\n  const { id } = useParams();\n  const [badge, setBadge] = useState(null);\n  const [loading, setLoading] = useState(true); // Add a loading state\n\n  useEffect(() => {\n    const fetchBadge = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/badges/${id}`);\n        console.log('Fetched badge:', response.data); // Debugging line\n        setBadge(response.data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching badge:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchBadge();\n  }, [id]);\n\n  if (loading) return <div>Loading...</div>;\n\n  if (!badge) return <div>No badge found</div>; // Check if badge is null or undefined\n\n  return (\n    <div className=\"badge-display\">\n      <h1>{badge.name}</h1>\n      <p>University: {badge.university}</p>\n      <p>Major: {badge.major}</p>\n      <p>Graduation Date: {badge.graduation_date}</p>\n      <p>GitHub: <a href={badge.github} target=\"_blank\" rel=\"noopener noreferrer\">{badge.github}</a></p>\n      <img src={`http://localhost:5000/${badge.qr_code_url}`} alt=\"QR Code\" />\n    </div>\n  );\n}\n\nexport default BadgeDisplay;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAMa,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,oCAAoCP,EAAE,EAAE,CAAC;QAC1EQ,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;QAC9CR,QAAQ,CAACI,QAAQ,CAACI,IAAI,CAAC;QACvBN,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7CP,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACL,EAAE,CAAC,CAAC;EAER,IAAIG,OAAO,EAAE,oBAAON,OAAA;IAAAe,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEzC,IAAI,CAACf,KAAK,EAAE,oBAAOJ,OAAA;IAAAe,QAAA,EAAK;EAAc;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC,CAAC,CAAC;;EAE9C,oBACEnB,OAAA;IAAKoB,SAAS,EAAC,eAAe;IAAAL,QAAA,gBAC5Bf,OAAA;MAAAe,QAAA,EAAKX,KAAK,CAACiB;IAAI;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrBnB,OAAA;MAAAe,QAAA,GAAG,cAAY,EAACX,KAAK,CAACkB,UAAU;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrCnB,OAAA;MAAAe,QAAA,GAAG,SAAO,EAACX,KAAK,CAACmB,KAAK;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BnB,OAAA;MAAAe,QAAA,GAAG,mBAAiB,EAACX,KAAK,CAACoB,eAAe;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/CnB,OAAA;MAAAe,QAAA,GAAG,UAAQ,eAAAf,OAAA;QAAGyB,IAAI,EAAErB,KAAK,CAACsB,MAAO;QAACC,MAAM,EAAC,QAAQ;QAACC,GAAG,EAAC,qBAAqB;QAAAb,QAAA,EAAEX,KAAK,CAACsB;MAAM;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAClGnB,OAAA;MAAK6B,GAAG,EAAE,yBAAyBzB,KAAK,CAAC0B,WAAW,EAAG;MAACC,GAAG,EAAC;IAAS;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrE,CAAC;AAEV;AAACjB,EAAA,CAnCQD,YAAY;EAAA,QACJJ,SAAS;AAAA;AAAAmC,EAAA,GADjB/B,YAAY;AAqCrB,eAAeA,YAAY;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}