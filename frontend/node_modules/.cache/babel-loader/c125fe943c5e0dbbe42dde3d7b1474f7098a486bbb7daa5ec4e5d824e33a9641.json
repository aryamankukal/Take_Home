{"ast":null,"code":"var _jsxFileName = \"/Users/aryamankukal/Downloads/Take_Home/frontend/src/components/BadgeDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BadgeDisplay() {\n  _s();\n  const {\n    id\n  } = useParams(); // Get the badge ID from the URL\n  const [badge, setBadge] = useState(null); // State to store the fetched badge data\n\n  useEffect(() => {\n    const fetchBadge = async () => {\n      try {\n        // Fetch the badge data from the backend using the badge ID\n        const response = await axios.get(`http://localhost:5000/api/badges/${id}`);\n        setBadge(response.data); // Set the fetched data into state\n      } catch (error) {\n        console.error('Error fetching badge', error);\n      }\n    };\n    fetchBadge();\n  }, [id]);\n\n  // Show a loading message while the badge data is being fetched\n  if (!badge) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 22\n  }, this);\n\n  // Display the badge data and the QR code image\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"badge-display\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: badge.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"University: \", badge.university]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Major: \", badge.major]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Graduation Date: \", badge.graduation_date]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"GitHub: \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: badge.github,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: badge.github\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `http://localhost:5000/${badge.qr_code_url}`,\n      alt: \"QR Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(BadgeDisplay, \"oAkfk+JtaFSUdw1N83hUA2OaYOw=\", false, function () {\n  return [useParams];\n});\n_c = BadgeDisplay;\nexport default BadgeDisplay;\nvar _c;\n$RefreshReg$(_c, \"BadgeDisplay\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","jsxDEV","_jsxDEV","BadgeDisplay","_s","id","badge","setBadge","fetchBadge","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","university","major","graduation_date","href","github","target","rel","src","qr_code_url","alt","_c","$RefreshReg$"],"sources":["/Users/aryamankukal/Downloads/Take_Home/frontend/src/components/BadgeDisplay.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction BadgeDisplay() {\n  const { id } = useParams(); // Get the badge ID from the URL\n  const [badge, setBadge] = useState(null); // State to store the fetched badge data\n\n  useEffect(() => {\n    const fetchBadge = async () => {\n      try {\n        // Fetch the badge data from the backend using the badge ID\n        const response = await axios.get(`http://localhost:5000/api/badges/${id}`);\n        setBadge(response.data); // Set the fetched data into state\n      } catch (error) {\n        console.error('Error fetching badge', error);\n      }\n    };\n\n    fetchBadge();\n  }, [id]);\n\n  // Show a loading message while the badge data is being fetched\n  if (!badge) return <div>Loading...</div>;\n\n  // Display the badge data and the QR code image\n  return (\n    <div className=\"badge-display\">\n      <h1>{badge.name}</h1>\n      <p>University: {badge.university}</p>\n      <p>Major: {badge.major}</p>\n      <p>Graduation Date: {badge.graduation_date}</p>\n      <p>\n        GitHub: <a href={badge.github} target=\"_blank\" rel=\"noopener noreferrer\">{badge.github}</a>\n      </p>\n      {/* Display the QR code image */}\n      <img src={`http://localhost:5000/${badge.qr_code_url}`} alt=\"QR Code\" />\n    </div>\n  );\n}\n\nexport default BadgeDisplay;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC,CAAC,CAAC;EAC5B,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE1CD,SAAS,CAAC,MAAM;IACd,MAAMW,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,oCAAoCL,EAAE,EAAE,CAAC;QAC1EE,QAAQ,CAACE,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;MAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDJ,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACH,EAAE,CAAC,CAAC;;EAER;EACA,IAAI,CAACC,KAAK,EAAE,oBAAOJ,OAAA;IAAAY,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;;EAExC;EACA,oBACEhB,OAAA;IAAKiB,SAAS,EAAC,eAAe;IAAAL,QAAA,gBAC5BZ,OAAA;MAAAY,QAAA,EAAKR,KAAK,CAACc;IAAI;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrBhB,OAAA;MAAAY,QAAA,GAAG,cAAY,EAACR,KAAK,CAACe,UAAU;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrChB,OAAA;MAAAY,QAAA,GAAG,SAAO,EAACR,KAAK,CAACgB,KAAK;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BhB,OAAA;MAAAY,QAAA,GAAG,mBAAiB,EAACR,KAAK,CAACiB,eAAe;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/ChB,OAAA;MAAAY,QAAA,GAAG,UACO,eAAAZ,OAAA;QAAGsB,IAAI,EAAElB,KAAK,CAACmB,MAAO;QAACC,MAAM,EAAC,QAAQ;QAACC,GAAG,EAAC,qBAAqB;QAAAb,QAAA,EAAER,KAAK,CAACmB;MAAM;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1F,CAAC,eAEJhB,OAAA;MAAK0B,GAAG,EAAE,yBAAyBtB,KAAK,CAACuB,WAAW,EAAG;MAACC,GAAG,EAAC;IAAS;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrE,CAAC;AAEV;AAACd,EAAA,CAnCQD,YAAY;EAAA,QACJJ,SAAS;AAAA;AAAAgC,EAAA,GADjB5B,YAAY;AAqCrB,eAAeA,YAAY;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}